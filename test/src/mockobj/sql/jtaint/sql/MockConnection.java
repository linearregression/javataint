/* Copyright 2009 Michael Dalton */
package jtaint.sql;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.CallableStatement;

public class MockConnection implements Connection
{
    private final DatabaseMetaData dmd;

    public MockConnection(DatabaseMetaData dmd) {
        this.dmd = dmd;
    }

    public Statement createStatement() { return new MockStatement(this); }

    public PreparedStatement prepareStatement(String sql) {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql) { 
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public DatabaseMetaData getMetaData() { 
        return dmd;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType,
                                       int resultSetConcurrency)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql, int resultSetType,
                                  int resultSetConcurrency)
    {
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType,
                                       int resultSetConcurrency, 
                                       int resultSetHoldability)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql, int resultSetType,
                                  int resultSetConcurrency,
                                  int resultSetHoldability)
    {
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public PreparedStatement prepareStatement(String sql, int columnIndexes[])
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }
    
    public PreparedStatement prepareStatement(String sql, String columnNames[])
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }
}
