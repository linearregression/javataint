/*
 *  Copyright 2009-2012 Michael Dalton
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package jtaint.sql;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.CallableStatement;

public class MockConnection implements Connection
{
    private final DatabaseMetaData dmd;

    public MockConnection(DatabaseMetaData dmd) {
        this.dmd = dmd;
    }

    public Statement createStatement() { return new MockStatement(this); }

    public PreparedStatement prepareStatement(String sql) {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql) { 
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public DatabaseMetaData getMetaData() { 
        return dmd;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType,
                                       int resultSetConcurrency)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql, int resultSetType,
                                  int resultSetConcurrency)
    {
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public PreparedStatement prepareStatement(String sql, int resultSetType,
                                       int resultSetConcurrency, 
                                       int resultSetHoldability)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public CallableStatement prepareCall(String sql, int resultSetType,
                                  int resultSetConcurrency,
                                  int resultSetHoldability)
    {
        CallableStatement c = new CallableStatement();
        sql = sql + c;
        return c;
    }

    public PreparedStatement prepareStatement(String sql, int autoGeneratedKeys)
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }

    public PreparedStatement prepareStatement(String sql, int columnIndexes[])
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }
    
    public PreparedStatement prepareStatement(String sql, String columnNames[])
    {
        PreparedStatement p = new PreparedStatement();
        sql = sql + p;
        return p;
    }
}
